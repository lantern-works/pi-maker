#!/bin/bash

IMAGE_NAME=${IMAGE_NAME:-rpi.img}

set -uo pipefail
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR
IFS=$'\n\t'

cleanup() {
  echo "cleaning up entrypoint..."
  if [[ -d "mnt/dev" ]]; then
      echo "unmounting dev..."
      umount "mnt/dev" || true
  fi

  if [[ -d "mnt/proc" ]]; then      
      echo "unmounting proc..."
      umount "mnt/proc" || true
  fi

  if [[ -d "mnt/sys" ]]; then
      echo "unmounting sys..."
      umount "mnt/sys" || true
  fi

  if [[ -d "mnt/boot" ]]; then
      echo "unmounting boot..."
      umount "mnt/boot" || true
  fi

  if [[ -d "mnt" ]]; then
      umount "mnt" || true
      rmdir "mnt" || true
  fi
  loopdev=$(losetup --find --show "${IMAGE_NAME}")
  [ -n "${loopdev}" ] && losetup --detach "${loopdev}" || true
}

trap cleanup EXIT

if [[ -f "/tmp/build/${IMAGE_NAME}" ]]; then
  echo "removing old image..."
  rm /tmp/build/${IMAGE_NAME}
fi

disk-init
load-os
copy-to-pi

# run custom setup script inside context of image
if [[ -n "${SETUP_SCRIPT}" ]]; then
  if [[ -f "${SETUP_SCRIPT}" ]]; then
    echo "running setup script..."
    chroot mnt "${SETUP_SCRIPT}"
  fi
fi

# now export the finalized image for flashing
[ ! -d "/tmp/build" ] && mkdir "/tmp/build"
cp "${IMAGE_NAME}" "/tmp/build/${IMAGE_NAME}"

echo "---------------------------------------------"
echo " ${IMAGE_NAME} is now ready for flashing"
echo "---------------------------------------------"
